name: Build and Deploy Documentation
on:
  push:
    branches: [main, master]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
  workflow_dispatch:
# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies
        run: |
          uv sync
      - name: Build documentation
        run: |
          uv run mkdocs build --strict
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  check-links:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Install dependencies
        run: |
          uv sync
      - name: Build documentation
        run: |
          uv run mkdocs build
      - name: Check for broken links
        run: |-
          # Install linkchecker
          pip install linkchecker

          # Start local server
          uv run mkdocs serve --dev-addr=127.0.0.1:8000 &
          SERVER_PID=$!

          # Wait for server to start
          sleep 5

          # Check links
          linkchecker http://127.0.0.1:8000/ --check-extern --ignore-url="^mailto:" --ignore-url="^tel:" || true

          # Stop server
          kill $SERVER_PID
